// Grid ////////////////////////////////////////////////////////////
    
//  A Grid System for cutLESS
//  by Jason Hibbs



// Useful Mixins

  // Column reset strips a column of its column-ness
  // Use .margin-x(0) or .padding-x(0) if you only need to reset these

  .column-reset(@amount: 0) {
    .margin-x(@amount);
    .padding-x(@amount);
    .box-sizing(content-box);
    width: auto;
    float: none;
  }


// Grid Variables
  
  // The width you’d like your gutters to be
  @gutterwidth: 20px;
  
  // Helpful, don’t remember why
  @gridwidth: 100%;



// Layout (Grid Container)

  .layout {
    width: 94%;
    .margin-x(auto);
    .clearfix();
    
    // For Fixed Layouts
    &.fixed {
      @media only screen and (min-width: 480px) {
        width: 400px;
      }
      
      @media only screen and (min-width: 600px) {
        width: 560px;
      }
      
      @media only screen and (min-width: 768px) {
        width: 640px;
      }
      
      @media only screen and (min-width: 992px) {
        width: 960px;
      }
      
      @media only screen and (min-width: 1382px) {
        width: 1280px;
      }
    }
    
    &.liquid {
      @media only screen and (min-width: 480px) {
        width: 83.3333333%;
      }
      
      @media only screen and (min-width: 600px) {
        width: 93.3333333%;
      }
      
      @media only screen and (min-width: 768px) {
        width: 83.3333333%;
      }
      
      @media only screen and (min-width: 992px) {
        width: 96.7741935%;
      }
      
      @media only screen and (min-width: 1382px) {
        width: 92.6193922%;
      }
    }
  
  }
  
  

// Column Mixin

  // This could really do with tidying up.
  // Optimising.
  // Seriously, it’s pretty powerful
  // But it’s messy.

  .column(@fraction: 1/1) {
  
    // Default
    @media only screen { 
      
      @gridbits: (320 / @gutterwidth);
      @gutterbits: (@gridwidth / @gridbits);
      
      .margin-x(@gutterbits * 0.5);
      .box-sizing(border-box);
    }
    
    // 480
    @media only screen and (min-width: 480px) {
      
      @gridbits: (400 / @gutterwidth);
      @gutterbits: (@gridwidth / @gridbits);
      
      .margin-x(@gutterbits * 0.5);
      
    }
    
    // 600
    @media only screen and (min-width: 600px) {
      
      @gridbits: (560 / @gutterwidth);
      @gutterbits: (@gridwidth / @gridbits);
      
      .margin-x(@gutterbits * 0.5);
      
      @portion: (@fraction / @fraction / @fraction);
      
      float: left;
      width: @gutterbits * ((@gridbits - @portion) * @fraction);
      
    }
    
    // 768
    @media only screen and (min-width: 768px) {
      
      @gridbits: (640 / @gutterwidth);
      @gutterbits: (@gridwidth / @gridbits);
      
      .margin-x(@gutterbits * 0.5);
      
      @portion: (@fraction / @fraction / @fraction);
      
      float: left;
      width: @gutterbits * ((@gridbits - @portion) * @fraction);
      
    }
    
    // 992
    @media only screen and (min-width: 992px) {
      
      @gridbits: (960 / @gutterwidth);
      @gutterbits: (@gridwidth / @gridbits);
      
      .margin-x(@gutterbits * 0.5);
      
      @portion: (@fraction / @fraction / @fraction);
      
      float: left;
      width: @gutterbits * ((@gridbits - @portion) * @fraction);
      
    }
    
    // 1382
    @media only screen and (min-width: 1382px) {
      
      @gridbits: (1280 / @gutterwidth);
      @gutterbits: (@gridwidth / @gridbits);
      
      .margin-x(@gutterbits * 0.5);
      
      @portion: (@fraction / @fraction / @fraction);
      
      float: left;
      width: @gutterbits * ((@gridbits - @portion) * @fraction);
      
    }
    
  }



