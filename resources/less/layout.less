// Layout Maker ////////////////////////////////////////////////////

.page_wrap.overlay {
  .filter(blur(4px) brightness(0.5) ~'saturate(1.5)' contrast(0.75));
  background-color: darken(#FFF, 0.5%);
}

// Column (needs redefining) -------------------------------------
@gridbits: (320 / @gutterwidth);
@gutterbits: (@gridwidth / @gridbits);

.column(@fraction) {@portion: (1 / @fraction); @columnwidth: @gutterbits * ((@gridbits - @portion) * @fraction); float: left; width: @columnwidth; .margin-x(@gutterbits * 0.5); }


// Other Variables and mixins --------------------------------------
  
.inner-columns(@num, @margin) {
  float: left;
  width: ((100% - (@margin * (@num - 1))) / @num);
  margin-right: percentage(@margin / 100);
  
  &:nth-of-type(@{num}n) {
    margin-right: 0;
  }
  
  &:nth-of-type(@{num}n + 1) {
    clear: left;    
  }
}

.package-columns(@margin) {
  
  .two_columns .content_box {
    .inner-columns(2, @margin);
  }
  
  .three_columns .content_box {
    .inner-columns(3, @margin);
  }
  
  .four_columns .content_box {
    .inner-columns(4, @margin);
    
    &:nth-of-type(2n + 1) {
      clear: none;
    }
  }
}


// Base Styles -----------------------------------------------------

[class*=_column] {
  background-color: @lightergrey;
  margin-bottom: (@blh);
  padding-top: (@blh);
  position: relative;
  
  overflow: hidden;
  clear: both;
  
  
  [class^=col_] {
    padding-top: 0;
    position: relative;
  }
  
  [class*=_column] {
    margin-bottom: 0;
  }
  
  &.img_bg {
    background: center center no-repeat;
    .background-size(cover);    
    
    .content_box {
      color: @white;
      
      &.bg {
        background-color: fadeout(@black, 50%);
      }
    }
  }
  
  &.centred {
    // This technique requires code to be reformatted
    // Removing white-space between content_boxes
    text-align: center;
    
    .content_box {
      float: none;
      display: inline-block;
      vertical-align: top;
      text-align: left;
    }
  }
}


.content_group {
  clear: both;
  overflow: hidden;
  
  &.defined,
  &.bg {
    margin-bottom: (@blh);
  }
  
  &.defined {
    border-bottom: 2px solid @lightgrey;
  }
  
  &.bg {
    background-color: @lightgrey;
    
    .bg {
      background-color: @lightergrey;
    }
  }
}

.content_box {
  margin-bottom: (@blh);
  overflow: hidden;
  
  &.bg {
    background-color: @lightgrey;
    padding: 0 (@gw / 2);
    
    &.thumb figure {
      margin-top: (@gw / 2);
    }
  }
  
  &.listing {
    ul {
      .delist();
    }
    
    li {
      line-height: ((@blh * 1.5) - 1px);
      border-bottom: 1px solid @lightgrey;
      
      &:first-child {
        line-height: ((@blh * 1.5) - 2px);
        border-top: 1px solid @lightgrey;
      }
    }
    
    li a {
      display: block;
    }   
  }
}



// Editing ---------------------------------------------------------

.edit_mode {
  
  [class*=_column],
  [class^=col_] {    
    
    &:before {
      content: attr(class);
      position: absolute;
      top: 0;
      left: 0;
      z-index: 2000;
      
      .font-size(10);
      line-height: 20px;
      letter-spacing: 0.1em;
      color: darken(@infocolor, 36%);
      background: fadeout(@white, 50%);
      .padding-x(8px);
      
      .transition(background 0.2s);
    }
    
    &:hover {
      &:before {
        background: fadeout(@white, 10%);
      }
    }
  }
  
  .content_group,
  .content_box {
    position: relative;
    
    //outline: 3px solid transparent;
    //.transition(outline-color 0.2s);
    
    &:before,
    &:after {
      z-index: 1000;
    }
  
    &:before {
      content: attr(class);
      position: absolute;
      top: 0;
      right: 0;
      
      .font-size(10);
      line-height: 20px;
      letter-spacing: 0.1em;
      color: darken(@errorcolor, 36%);
      background: fadeout(@white, 50%);
      .padding-x(8px);
      z-index: 1001;
      
      .transition(background 0.2s);
    }
    
    
    &:after {
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      border: 3px solid transparent;
      
      .transition(border-color 0.2s);
    }
    
    
    
    &:hover {
      //outline-color: fadeout(@white, 20%);
    
      &:before {
        background: fadeout(@white, 10%);
      }
      
      &:after {
        border-color: fadeout(@grey, 20%);
      }
    }
  }
  
  .content_box {
    z-index: 1001;
  }
}


// Column Classes --------------------------------------------------

.content_group {
  h1 {
    .column-all(1);
  }
}

.one_column {
  .content_box {
    .column-all(1);
  }
}

.two_columns,
.three_columns,
.four_columns {
  .content_box {
    .column(1);
  }
}

.six_columns {
  .content_box {
    .column(1/2);
    
    &:nth-of-type(2n + 1) {
      clear: left;
    }
  }
}

.three_columns {
  .col_twothirds,
  .col_onethird {
        
    .content_box {
      width: 100%;
      .margin-x(0);
    }
  }
  
  .col_onethird .content_box {
    margin-bottom: (@blh * 0.5);
  }
}

.four_columns {
  .col_threequarters,
  .col_onequarter {
        
    .content_box {
      width: 100%;
      .margin-x(0);
    }
  }
  
  .col_onequarter .content_box {
    margin-bottom: (@blh * 0.5);
    
    h4 {
      line-height: (@blh * 1.5);
    }
  }
}

.free_columns {
  .onecol {
    .column-all(1/12);
  }
  .twocol {
    .column-all(2/12);
  }
  .threecol {
    .column-all(3/12);
  }
  .fourcol {
    .column-all(4/12);
  }
  .fivecol {
    .column-all(5/12);
  }
  .sixcol {
    .column-all(6/12);
  }
  .sevencol {
    .column-all(7/12);
  }
  .eightcol {
    .column-all(8/12);
  }
  .ninecol {
    .column-all(9/12);
  }
  .tencol {
    .column-all(10/12);
  }
  .elevencol {
    .column-all(11/12);
  }
  .twelvecol {
    .column-all(12/12);
  }
}



@media only screen and (max-width: 479px) {
  
  *[class*=_column] {
    
    &.mobile_full {
      
      .layout {
        width: 100%;
        
        .content_box {
          width: 100%;
          .margin-x(0);
          
          &.listing li a {
            .padding-x((100% - 87.5) / 2);
          }
        }
      }
    }
  }
  
}


@media only screen and (min-width: 480px) {
   
  // Column (needs redefining) -------------------------------------
  @gridbits: (@480width / @gutterwidth);
  @gutterbits: (@gridwidth / @gridbits);
  
  .column(@fraction) {@portion: (1 / @fraction); @columnwidth: @gutterbits * ((@gridbits - @portion) * @fraction); float: left; width: @columnwidth; .margin-x(@gutterbits * 0.5); }
  
  
  // Column Classes ------------------------------------------------
  .two_columns,
  .three_columns,
  .four_columns {
    .content_box {
      .column(1);
    }
  }
  
  .six_columns {
    .content_box {
      .column(1/2);
      
      &:nth-of-type(2n + 1) {
        clear: left;
      }
    }
  }
  
  .three_columns {
    .col_twothirds,
    .col_onethird {
      .column(1);
    }
  }
  
  .four_columns {
    .col_threequarters,
    .col_onequarter {
      .column(1);
    }
  }
  
}


@media only screen and (min-width: 600px) {

  // Column (needs redefining) -------------------------------------
  @gridbits: (@600width / @gutterwidth);
  @gutterbits: (@gridwidth / @gridbits);
  
  .column(@fraction) {@portion: (1 / @fraction); @columnwidth: @gutterbits * ((@gridbits - @portion) * @fraction); float: left; width: @columnwidth; .margin-x(@gutterbits * 0.5); }

  // Inner Columns -------------------------------------------------
  
  [class^=col_] {
    .package-columns(2);
  }

  // Column Classes ------------------------------------------------
  .two_columns,
  .three_columns {
    .content_box {
      .column(1);
    }
  }
  
  .two_columns {
    .content_box.thumb {
      .column(1/2);
      
      &:nth-of-type(2n + 1) {
        clear: left;
      }
    }
  }
  
  
  .four_columns {
    .content_box {
      .column(1/2);
      
      &:nth-of-type(2n + 1) {
        clear: left;
      }
    }
  }
  
  
  .six_columns {
    .content_box {
      .column(1/3);
      
      &:nth-of-type(2n + 1) {
        clear: none;
      }
      
      &:nth-of-type(3n + 1) {
        clear: left;
      }
    }
  }
  
  .three_columns {
    .col_twothirds,
    .col_onethird {
      .column(1);
    }
  }
  
  .four_columns {
    .col_threequarters,
    .col_onequarter {
      .column(1);
    }
  }

}


@media only screen and (min-width: 768px) {

  // Column (needs redefining) -------------------------------------
  @gridbits: (@768width / @gutterwidth);
  @gutterbits: (@gridwidth / @gridbits);
  
  .column(@fraction) { @portion: (1 / @fraction); @columnwidth: @gutterbits * ((@gridbits - @portion) * @fraction); float: left; width: @columnwidth; .margin-x(@gutterbits * 0.5); }

  // Inner Columns -------------------------------------------------
  
  [class^=col_] {
    .package-columns(2);
  }

  // Column Classes ------------------------------------------------
  .two_columns,
  .three_columns {
    .content_box {
      .column(1);
    }
  }
  
  .two_columns {
    .content_box.thumb {
      .column(1/2);
    }
  }
  
  
  .four_columns {
    .content_box {
      .column(1/2);
      
      &:nth-of-type(2n + 1) {
        clear: left;
      }
    }
  }
  
  
  .six_columns {
    .content_box {
      .column(1/3);
      
      &:nth-of-type(2n + 1) {
        clear: none;
      }
      
      &:nth-of-type(3n + 1) {
        clear: left;
      }
    }
  }
  
  
  .three_columns {
    .col_twothirds,
    .col_onethird {
      .column(1);
    }
  }
  
  .four_columns {
    .col_threequarters,
    .col_onequarter {
      .column(1);
    }
  }


}


@media only screen and (min-width: 992px) {

  // Column (needs redefining) -------------------------------------
  @gridbits: (@992width / @gutterwidth);
  @gutterbits: (@gridwidth / @gridbits);
  
  .column(@fraction) {@portion: (1 / @fraction); @columnwidth: @gutterbits * ((@gridbits - @portion) * @fraction); float: left; width: @columnwidth; .margin-x(@gutterbits * 0.5); }

  // Inner Columns -------------------------------------------------
  
  [class^=col_] {
    .package-columns(3);
  }

  // Column Classes ------------------------------------------------
  .two_columns {
    .content_box {
      .column(1/2);
      
      &:nth-of-type(2n + 1) {
        clear: left;
      }
      
      
      &.thumb,
      &.thumb.bg {
        figure {
          float: left;
          width: (@gw * 7);
          margin-top: (@blh);
          margin-right: (@gw);
        }
      }
    }
  }
  
  
  
  .three_columns {
    .content_box {
      .column(1/3);
      
      &:nth-of-type(3n + 1) {
        clear: left;
      }
    }
  }
  
  
  .four_columns {
    .content_box {
      .column(1/4);
      
      &:nth-of-type(2n + 1) {
        clear: none;
      }
      
      &:nth-of-type(4n + 1) {
        clear: left;
      }
    }
  }
  
  
  .six_columns {
    .content_box {
      .column(1/6);
      
      &:nth-of-type(3n + 1) {
        clear: none;
      }
      
      &:nth-of-type(6n + 1) {
        clear: left;
      }
    }
  }
  
  
  .three_columns {
    
    .col_twothirds {
      .column(2/3);
    }
  
    .col_onethird {
      .column(1/3);
    }
  }
  
  .four_columns {
    
    .col_threequarters {
      .column(3/4);
    }
  
    .col_onequarter {
      .column(1/4);
    }
  }

}


@media only screen and (min-width: 1382px) {

  // Column (needs redefining) -------------------------------------
  @gridbits: (@1382width / @gutterwidth);
  @gutterbits: (@gridwidth / @gridbits);
   
  .column(@fraction) {@portion: (1 / @fraction); @columnwidth: @gutterbits * ((@gridbits - @portion) * @fraction); float: left; width: @columnwidth; .margin-x(@gutterbits * 0.5); }

  // Inner Columns -------------------------------------------------
  
  [class^=col_] {
    .package-columns(2);
  }

  // Column Classes ------------------------------------------------
  .two_columns {
    .content_box {
      .column(1/2);
    }
  }
  
  
  .three_columns {
    .content_box {
      .column(1/3);
    }
  }
  
  
  .four_columns {
    .content_box {
      .column(1/4);
    }
  }
  
  
  .six_columns {
    .content_box {
      .column(1/6);
    }
  }
  
  
  .three_columns {
    
    .col_twothirds {
      .column(2/3);
    }
  
    .col_onethird {
      .column(1/3);
    }
  }
  
  .four_columns {
    
    .col_threequarters {
      .column(3/4);
    }
  
    .col_onequarter {
      .column(1/4);
    }
  }
}











